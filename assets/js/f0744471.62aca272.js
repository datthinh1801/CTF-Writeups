"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9512],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),b=u(n),m=a,d=b["".concat(c,".").concat(m)]||b[m]||l[m]||o;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},8727:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return b}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={},c="Lab: Broken brute-force protection, multiple credentials per request",u={unversionedId:"PortSwigger/Authentication/Lab 06",id:"PortSwigger/Authentication/Lab 06",isDocsHomePage:!1,title:"Lab: Broken brute-force protection, multiple credentials per request",description:"Task",source:"@site/docs/PortSwigger/Authentication/Lab 06.md",sourceDirName:"PortSwigger/Authentication",slug:"/PortSwigger/Authentication/Lab 06",permalink:"/Writeups/docs/PortSwigger/Authentication/Lab 06",editUrl:"https://github.com/datthinh1801/Writupes/tree/main/website/docs/PortSwigger/Authentication/Lab 06.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Lab: Username enumeration via account lock",permalink:"/Writeups/docs/PortSwigger/Authentication/Lab 05"},next:{title:"Lab: 2FA simple bypass",permalink:"/Writeups/docs/PortSwigger/Authentication/Lab 07"}},p=[{value:"Task",id:"task",children:[]},{value:"Solution",id:"solution",children:[]}],l={toc:p};function b(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"lab-broken-brute-force-protection-multiple-credentials-per-request"},"Lab: Broken brute-force protection, multiple credentials per request"),(0,o.kt)("h2",{id:"task"},"Task"),(0,o.kt)("p",null,"This lab is vulnerable due to a logic flaw in its brute-force protection. To solve the lab, brute-force Carlos's password, then access his account page."),(0,o.kt)("p",null,"Victim's username: ",(0,o.kt)("inlineCode",{parentName:"p"},"carlos"),(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("a",{parentName:"p",href:"https://portswigger.net/web-security/authentication/auth-lab-passwords"},"Candidate passwords")),(0,o.kt)("h2",{id:"solution"},"Solution"),(0,o.kt)("p",null,"In this lab, the format of the posted data is a bit different than previous ones:  "),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/44528004/130310128-b7ef0b7e-8828-41a0-8f2d-7dc90aa0d3e0.png",alt:"image"}),"  "),(0,o.kt)("p",null,"Here, the data is represented as JSON, and in JSON, we can specify multiple values as a list for a given key:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "username":"test",\n  "password":[\n    "test",\n    "123456",\n    "password",\n    ]\n}\n')),(0,o.kt)("p",null,"For this reason, we can test all possible passwords at once.  "),(0,o.kt)("p",null,"Request:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/44528004/130310135-383c0739-c2e3-4126-9dca-b59b32d41592.png",alt:"image"})),(0,o.kt)("p",null,"Response:  "),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/44528004/130310139-be9fb4ee-eeb4-4f7e-b914-2befdd088bbb.png",alt:"image"})),(0,o.kt)("p",null,"In the response, we are assigned a new ",(0,o.kt)("inlineCode",{parentName:"p"},"session")," cookie. What we need to do is make a GET request to ",(0,o.kt)("inlineCode",{parentName:"p"},"/my-account")," and paste this ",(0,o.kt)("inlineCode",{parentName:"p"},"session")," cookie into the request"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/44528004/130310205-5ea1a525-ab90-48eb-84f1-c81c39791abf.png",alt:"image"}),"  "),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/44528004/130310211-65a3ae78-19b9-435a-9bc7-c51eab8fdb33.png",alt:"image"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Solved!")))}b.isMDXComponent=!0}}]);