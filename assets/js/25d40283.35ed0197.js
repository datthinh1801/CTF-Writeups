"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[625],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=l(r),m=o,d=b["".concat(u,".").concat(m)]||b[m]||s[m]||a;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=b;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},1208:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return p},default:function(){return b}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],c={},u="Lab: Broken brute-force protection, IP block",l={unversionedId:"PortSwigger/Authentication/Lab 04",id:"PortSwigger/Authentication/Lab 04",isDocsHomePage:!1,title:"Lab: Broken brute-force protection, IP block",description:"Task",source:"@site/docs/PortSwigger/Authentication/Lab 04.md",sourceDirName:"PortSwigger/Authentication",slug:"/PortSwigger/Authentication/Lab 04",permalink:"/Writeups/docs/PortSwigger/Authentication/Lab 04",editUrl:"https://github.com/datthinh1801/Writupes/tree/main/website/docs/PortSwigger/Authentication/Lab 04.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Lab: Username enumeration via response timing",permalink:"/Writeups/docs/PortSwigger/Authentication/Lab 03"},next:{title:"Lab: Username enumeration via account lock",permalink:"/Writeups/docs/PortSwigger/Authentication/Lab 05"}},p=[{value:"Task",id:"task",children:[]},{value:"Solution",id:"solution",children:[]}],s={toc:p};function b(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"lab-broken-brute-force-protection-ip-block"},"Lab: Broken brute-force protection, IP block"),(0,a.kt)("h2",{id:"task"},"Task"),(0,a.kt)("p",null,"This lab is vulnerable due to a logic flaw in its password brute-force protection. To solve the lab, brute-force the victim's password, then log in and access their account page."),(0,a.kt)("p",null,"Your credentials: ",(0,a.kt)("inlineCode",{parentName:"p"},"wiener:peter"),(0,a.kt)("br",{parentName:"p"}),"\n","Victim's username: ",(0,a.kt)("inlineCode",{parentName:"p"},"carlos"),(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("a",{parentName:"p",href:"https://portswigger.net/web-security/authentication/auth-lab-passwords"},"Candidate passwords")),(0,a.kt)("h2",{id:"solution"},"Solution"),(0,a.kt)("p",null,"In this lab, multiple failed login attempts will make our IP blocked; however, a successful login will reset that behavior. For that reason, to brute-force the ",(0,a.kt)("inlineCode",{parentName:"p"},"carlos"),"'s password, we just need to intervene the brute-force with our credential to reset any block imposed.  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"username")," list:  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"carlos\nwiener\ncarlos\nwiener\n...\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"password")," list:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"123456\npeter\npassword\npeter\n...\n")),(0,a.kt)("p",null,"When brute-forcing with Burp Suite Pro, filter the response for ",(0,a.kt)("inlineCode",{parentName:"p"},"carlos")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"status code == 302"),".  "),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/44528004/130308858-fae135fa-cb8f-4eda-bc63-1108398e95ab.png",alt:"image"})),(0,a.kt)("p",null,"Login:  "),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/44528004/130308888-77dbd4be-ed83-448f-96ae-594d2c0762e1.png",alt:"image"})),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/44528004/130308895-03ba5e75-aa8c-427b-8787-6de0976507ab.png",alt:"image"})),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Solved!")))}b.isMDXComponent=!0}}]);