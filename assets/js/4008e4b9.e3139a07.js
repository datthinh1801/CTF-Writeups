"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5718],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return b}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(r),b=n,f=d["".concat(s,".").concat(b)]||d[b]||u[b]||i;return r?a.createElement(f,o(o({ref:t},c),{},{components:r})):a.createElement(f,o({ref:t},c))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6908:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var a=r(7462),n=r(3366),i=(r(7294),r(3905)),o=["components"],l={},s="Lab: File path traversal, traversal sequences blocked with absolute path bypass",p={unversionedId:"PortSwigger/Directory Traversal/Lab 02",id:"PortSwigger/Directory Traversal/Lab 02",isDocsHomePage:!1,title:"Lab: File path traversal, traversal sequences blocked with absolute path bypass",description:"Task",source:"@site/docs/PortSwigger/Directory Traversal/Lab 02.md",sourceDirName:"PortSwigger/Directory Traversal",slug:"/PortSwigger/Directory Traversal/Lab 02",permalink:"/Writeups/docs/PortSwigger/Directory Traversal/Lab 02",editUrl:"https://github.com/datthinh1801/Writupes/tree/main/website/docs/PortSwigger/Directory Traversal/Lab 02.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Lab: File path traversal, simple case",permalink:"/Writeups/docs/PortSwigger/Directory Traversal/Lab 01"},next:{title:"Lab: File path traversal, traversal sequences stripped non-recursively",permalink:"/Writeups/docs/PortSwigger/Directory Traversal/Lab 03"}},c=[{value:"Task",id:"task",children:[]},{value:"Solution",id:"solution",children:[]}],u={toc:c};function d(e){var t=e.components,r=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"lab-file-path-traversal-traversal-sequences-blocked-with-absolute-path-bypass"},"Lab: File path traversal, traversal sequences blocked with absolute path bypass"),(0,i.kt)("h2",{id:"task"},"Task"),(0,i.kt)("p",null,"This lab contains a file path traversal vulnerability in the display of product images."),(0,i.kt)("p",null,"The application blocks traversal sequences but treats the supplied filename as being relative to a default working directory."),(0,i.kt)("p",null,"To solve the lab, retrieve the contents of the ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/passwd")," file."),(0,i.kt)("h2",{id:"solution"},"Solution"),(0,i.kt)("p",null,"Here, when we perform the same attack as in the previous lab with ",(0,i.kt)("inlineCode",{parentName:"p"},"../../../etc/passwd"),", we'll get this response:  "),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/44528004/130412123-3f3cb4e9-8111-4c47-91e0-297c8ffae86d.png",alt:"image"}),"  "),(0,i.kt)("p",null,"Here, as the application blocks traversal sequences, I guess it blocks ",(0,i.kt)("inlineCode",{parentName:"p"},".."),". Thus, our ",(0,i.kt)("inlineCode",{parentName:"p"},"filename")," will become ",(0,i.kt)("inlineCode",{parentName:"p"},"///etc/passwd")," which is obivously invalid."),(0,i.kt)("p",null,"Initially, I think that because the ",(0,i.kt)("inlineCode",{parentName:"p"},"filename")," is relative to the default working directory, it could be appended to that path.\nHowever, when we use the absolute path ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/passwd"),", it works:  "),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Now, I think that the program doesn't append the ",(0,i.kt)("inlineCode",{parentName:"p"},"filename")," to any path at all. It simply treats the filename relative to the default working directory implicitly; therefore, we we provide ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/passwd"),", it becomes an absolute path.  ")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/44528004/130412436-dd6cd084-843f-4fe5-af8f-e15c7e83a296.png",alt:"image"})),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Solved!")))}d.isMDXComponent=!0}}]);